<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog</title><link href="/" rel="alternate"></link><link href="/feeds/all-en.atom.xml" rel="self"></link><id>/</id><updated>2020-04-05T13:55:00+01:00</updated><entry><title>Process manipulation in Linux</title><link href="/process-manipulation-in-linux.html" rel="alternate"></link><published>2020-04-05T13:55:00+01:00</published><updated>2020-04-05T13:55:00+01:00</updated><author><name></name></author><id>tag:None,2020-04-05:/process-manipulation-in-linux.html</id><summary type="html">&lt;p&gt;Process monitoring and manipulation commands in Linux&lt;/p&gt;</summary><content type="html">&lt;!-- $$ \usepackage{amsmath} $$  --&gt;

&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;In this blog, we will talk about process monitoring commands (&lt;code&gt;ps&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt;) and process manipulation (kill, pause, suspend, etc.)  in Linux.&lt;/p&gt;
&lt;h2&gt;Process Monitoring&lt;/h2&gt;
&lt;h3&gt;ps - process snapshot&lt;/h3&gt;
&lt;p&gt;To monitor the number of running processes on the machine the user is logged into, a general purpose process status command &lt;code&gt;ps&lt;/code&gt; can be used. &lt;/p&gt;
&lt;p&gt;Formally speaking, &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;ps&lt;/em&gt;&lt;/strong&gt; displays information about a selection of active processes. If you want a repetitive update of the selection and the displayed information, use &lt;strong&gt;&lt;em&gt;top&lt;/em&gt;&lt;/strong&gt; instead.  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By default (no arguments provided), process ID (&lt;strong&gt;PID&lt;/strong&gt;), terminal associated with the process (&lt;strong&gt;TTY&lt;/strong&gt;), the cumulated CPU time in hh:mm:ss format (&lt;strong&gt;TIME&lt;/strong&gt;), and executable name (&lt;strong&gt;CMD&lt;/strong&gt;) of &lt;strong&gt;the current shell&lt;/strong&gt; are displayed.&lt;/p&gt;
&lt;h4&gt;command line options&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ps&lt;/code&gt; accepts several kinds of options:
1. UNIX options, can be grouped, must be preceded by a dash.
2. BSD options, can be grouped, &lt;strong&gt;&lt;em&gt;no dash&lt;/em&gt;&lt;/strong&gt;. Process state included in the display. Processes on other terminals are also included.
3. GNU long options, preceded by two dashes.&lt;/p&gt;
&lt;p&gt;we will mainly focus on the UNIX options as an foundation.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;functionality&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-A&lt;/code&gt; or &lt;code&gt;-e&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;List all processes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;full-format listing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-x&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;current user owned process only&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-u user_id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;processes owned by specified user&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-t tty_name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;select process by terminal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;-o format&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;display in user defined format&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;display top running processes by memory usage&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ps -eo pid,ppid,cmd,%mem,%cpu --sort&lt;span class="o"&gt;=&lt;/span&gt;-%mem &lt;span class="p"&gt;|&lt;/span&gt; head
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;top&lt;/h3&gt;
&lt;p&gt;As mentioned before, &lt;code&gt;top&lt;/code&gt; can be used to monitor the running system in real-time, i.e., regularly update the displayed information. It can also display system summary information, of which order, type, size can be configured as per user's perference.&lt;/p&gt;
&lt;h4&gt;operation&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;top&lt;/code&gt; command often produces a long output which usually streches out a window. To slide, motion keys (&lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;), &lt;code&gt;PgUp&lt;/code&gt;, &lt;code&gt;PgDn&lt;/code&gt;, &lt;code&gt;Home&lt;/code&gt;, &lt;code&gt;End&lt;/code&gt; work as they usually do.&lt;/p&gt;
&lt;h4&gt;command line options&lt;/h4&gt;
&lt;p&gt;As always, you can rely on &lt;code&gt;-h&lt;/code&gt; for help. Other useful options include:
1. Exit after specific repetition. By default, it keeps refreshing until you press &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    top -n &lt;span class="m"&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Only display processes belong to a specific user.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    top -u user_id
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Highlight running processes color by pressing &lt;code&gt;z&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Show absolute path of processes by pressing &lt;code&gt;c&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Kill a running process while keeping the command running by pressing &lt;code&gt;k&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Sort the processes by CPU utilisation by pressing &lt;code&gt;shift&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;see &lt;a href="http://man7.org/linux/man-pages/man1/top.1.html"&gt;manual&lt;/a&gt; for more options and explanation of the summary info.  &lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Process manipulation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A process refers to a program in execution; it's a running instance of a program.
Each process has its unique process ID (PID) and its parent process ID (PPID).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Types of processes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Foreground processes (interactive processes).&lt;/li&gt;
&lt;li&gt;Background processes (non-interactive processes).&lt;br&gt;
or&lt;/li&gt;
&lt;li&gt;Parent process - create other processes at runtime&lt;/li&gt;
&lt;li&gt;Child process - get created by other processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Init process is the mother of all processes on the system with a PID of 1. It adopts all orphaned processes. The PID of a process can be obtained by command &lt;code&gt;pidof process_name&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;States of processes&lt;/h3&gt;
&lt;p&gt;A linux process state transition graph. Image credit goes to &lt;a href="https://www.tecmint.com/linux-process-management/"&gt;Tecmint&lt;/a&gt;.
&lt;img alt="alt text" src="/images/ProcessState.png"&gt;&lt;/p&gt;
&lt;h3&gt;Creation of a process&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Use system functions - simple but inefficient and insecure&lt;/li&gt;
&lt;li&gt;Use fork() and exec() - more flexibility, speed, and security.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Background jobs&lt;/h3&gt;
&lt;p&gt;To start a process in the background (non-interactive), &lt;code&gt;&amp;amp;&lt;/code&gt; symbol makes the command precedes it run in the background. (BTW, &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; concatenates two sequential operations).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If a command is terminated by the control operator &amp;amp;, the shell executes the command in the background in a subshell. The shell does not wait for the command to finish, and the return status is 0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once you've started a job in the foreground, you can also send it to the background by suspending it first using &lt;code&gt;Ctrl+Z&lt;/code&gt;, and continue it in the background by &lt;code&gt;bg&lt;/code&gt; command. To bring it foregound againn, use command &lt;code&gt;fg %job_id&lt;/code&gt;, the job id in which &lt;code&gt;job_id&lt;/code&gt; can be found by using &lt;code&gt;jobs&lt;/code&gt;. It is worth noting that the process will still output to the terminal even it is in the background and it is going to be messy if you try to type a command when the output is frequent (your input will be mixed with the process output).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;qsh@ghildes&amp;gt; sleep &lt;span class="m"&gt;100&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;Ctrl+Z&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Stopped                 sleep &lt;span class="m"&gt;100&lt;/span&gt;
qsh@ghildes&amp;gt; &lt;span class="nb"&gt;jobs&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Stopped                 sleep &lt;span class="m"&gt;100&lt;/span&gt;
qsh@ghildes&amp;gt; &lt;span class="nb"&gt;bg&lt;/span&gt; %1 
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+ sleep &lt;span class="m"&gt;100&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
qsh@ghildes&amp;gt; &lt;span class="nb"&gt;fg&lt;/span&gt; %1
sleep &lt;span class="m"&gt;100&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If only one job in the bg/fg, job id can be omitted.  &lt;/p&gt;
&lt;p&gt;Delete a suspended process by &lt;code&gt;kill&lt;/code&gt; command followed by job id. Delete a process running in the foreground can be done by a simple &lt;code&gt;Ctrl+C&lt;/code&gt;. Also, process can be killed by providing its PID.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;qsh@ghildes&amp;gt; xclock &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;31176&lt;/span&gt;
qsh@ghildes&amp;gt; &lt;span class="nb"&gt;kill&lt;/span&gt; -9 &lt;span class="m"&gt;31176&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Killed                  xclock
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;qsh@ghildes&amp;gt; xclock &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;32012&lt;/span&gt;
qsh@ghildes&amp;gt; &lt;span class="nb"&gt;kill&lt;/span&gt; %1
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;+  Terminated              xclock
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://man7.org/linux/man-pages/man1/ps.1.html"&gt;&lt;em&gt;ps(1) - Linux manual page&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="http://man7.org/linux/man-pages/man1/top.1.html"&gt;&lt;em&gt;top(1) - Linux manual page&lt;/em&gt;&lt;/a&gt;
&lt;a href="http://www.physics.smu.edu/coan/linux/processes.html"&gt;&lt;em&gt;Manipulating processes in Linux&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/top-command-in-linux-with-examples/"&gt;&lt;em&gt;top command in Linux with Examples&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tecmint.com/ps-command-examples-for-linux-process-monitoring/"&gt;&lt;em&gt;30 Useful ‘ps Command’ Examples for Linux Process Monitoring&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;</content><category term="notes"></category><category term="Linux"></category></entry><entry><title>Basics of linear algebra for machine learning</title><link href="/basics-of-linear-algebra-for-machine-learning.html" rel="alternate"></link><published>2020-01-28T20:47:00+08:00</published><updated>2020-01-28T20:47:00+08:00</updated><author><name></name></author><id>tag:None,2020-01-28:/basics-of-linear-algebra-for-machine-learning.html</id><summary type="html">&lt;!-- $$ \usepackage{amsmath} $$  --&gt;

&lt;h2&gt;Scalar, Vector, Matrices and Tensors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scalars&lt;/strong&gt;: A single number, written in italics, lower-case $$ \alpha $$.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vectors&lt;/strong&gt;: An array of numbers, written in lower-case and bold typeface, such as &lt;strong&gt;&lt;em&gt;x&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Matrices&lt;/strong&gt; : 2-D array of numbers, wriiten in upper-case and bold typeface, such as &lt;strong&gt;&lt;em&gt;A&lt;/em&gt;&lt;/strong&gt;. Elements can be identifies using &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tensors&lt;/strong&gt; : array with …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;!-- $$ \usepackage{amsmath} $$  --&gt;

&lt;h2&gt;Scalar, Vector, Matrices and Tensors&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scalars&lt;/strong&gt;: A single number, written in italics, lower-case $$ \alpha $$.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vectors&lt;/strong&gt;: An array of numbers, written in lower-case and bold typeface, such as &lt;strong&gt;&lt;em&gt;x&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Matrices&lt;/strong&gt; : 2-D array of numbers, wriiten in upper-case and bold typeface, such as &lt;strong&gt;&lt;em&gt;A&lt;/em&gt;&lt;/strong&gt;. Elements can be identifies using &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tensors&lt;/strong&gt; : array with more than two axes. In the general case, an array of numbers arranged on a regular grid with a variable number of axes is known as a tensor.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Transpose&lt;/h2&gt;
&lt;p&gt;The transpose of a matrix is the mirror image of the matrix across a diagonal line.&lt;/p&gt;
&lt;p&gt;$$ (\mathbf{A}^T)&lt;em j_i="j,i"&gt;{i,j} = \mathbf{A}&lt;/em&gt; $$&lt;/p&gt;
&lt;h2&gt;Special matrices and vectors&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Diagonal&lt;/strong&gt; matrices have non-zero entries only along the main diagonal. Multiplying by a diagonal matrix is very computationally efficient:
$$ diag(\mathbf v) \dot x = v (element-wise multipy) x $$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Eigenvalue decomposition&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Singular value decomposition&lt;/strong&gt;&lt;/h2&gt;</content><category term="notes"></category><category term="ML"></category></entry><entry><title>Working with remote server powered with GPUs</title><link href="/working-with-remote-server-powered-with-gpus.html" rel="alternate"></link><published>2020-01-10T00:00:00+00:00</published><updated>2020-01-10T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2020-01-10:/working-with-remote-server-powered-with-gpus.html</id><summary type="html">&lt;h2&gt;Package management&lt;/h2&gt;
&lt;h2&gt;Conda related Commands&lt;/h2&gt;
&lt;p&gt;As a non-root user, I don't have root access to the whole server. Installations are limited to my sub-folder only. To be able to work in an environment of more flexibility, a Conda environment needs to be created.&lt;/p&gt;
&lt;p&gt;First, you would like to check the …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Package management&lt;/h2&gt;
&lt;h2&gt;Conda related Commands&lt;/h2&gt;
&lt;p&gt;As a non-root user, I don't have root access to the whole server. Installations are limited to my sub-folder only. To be able to work in an environment of more flexibility, a Conda environment needs to be created.&lt;/p&gt;
&lt;p&gt;First, you would like to check the existing environments with the following command to list all of them.&lt;br&gt;
&lt;code&gt;conda info --envs&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;You can create an environment of name "env_name" with&lt;br&gt;
&lt;code&gt;conda create --name env_name&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;Activate and de-activate to dive in the environment&lt;br&gt;
&lt;code&gt;conda activate(deactivate) env_name&lt;/code&gt;&lt;br&gt;
Once your are in the environment, the environment name will show before the $ sign.  &lt;/p&gt;</content><category term="notes"></category></entry><entry><title>Is the economic crisis approching?</title><link href="/is-the-economic-crisis-approching.html" rel="alternate"></link><published>2020-01-04T00:00:00+00:00</published><updated>2020-01-04T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2020-01-04:/is-the-economic-crisis-approching.html</id><summary type="html">&lt;p&gt;analysis of the possiblity of a economic crisis&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.linkedin.com/pulse/three-big-issues-1930s-analogue-ray-dalio/"&gt;The Three Big Issues and the 1930s Analogue&lt;/a&gt; 
&lt;a href="https://www.linkedin.com/pulse/threat-limit-capital-flows-china-pending-impeachment-conflict-dalio/"&gt;The Next Logical Steps in a Classic Dangerous Journey&lt;/a&gt;&lt;/p&gt;</content><category term="Other"></category><category term="Economics"></category></entry><entry><title>The use of cat in combination with other linux commands</title><link href="/the-use-of-cat-in-combination-with-other-linux-commands.html" rel="alternate"></link><published>2019-12-27T21:26:40+01:00</published><updated>2019-12-27T21:26:40+01:00</updated><author><name></name></author><id>tag:None,2019-12-27:/the-use-of-cat-in-combination-with-other-linux-commands.html</id><summary type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;When searching for something in a file, we may want to look into a specific location of a file. The most straightforward way for me to handle this would be &lt;code&gt;vim&lt;/code&gt; it and then &lt;code&gt;pg down&lt;/code&gt;. It becomes less realistic when the file size grows larger.&lt;/p&gt;
&lt;p&gt;Linux provides us …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;When searching for something in a file, we may want to look into a specific location of a file. The most straightforward way for me to handle this would be &lt;code&gt;vim&lt;/code&gt; it and then &lt;code&gt;pg down&lt;/code&gt;. It becomes less realistic when the file size grows larger.&lt;/p&gt;
&lt;p&gt;Linux provides us with several commands (editor) to suit different needs. For instance,  &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;vim&lt;/code&gt;, &lt;code&gt;grep&lt;/code&gt;, etc.&lt;/p&gt;
&lt;h2&gt;cat&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cat&lt;/code&gt; is short for "&lt;strong&gt;concatenate&lt;/strong&gt;". It allows us to create one or more files, view contents, concatenate files, and redirect output to terminals or files.&lt;/p&gt;
&lt;h3&gt;view contents&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;cat&lt;/code&gt; will direct all contents of a file to std output (therefore can be combined with pipe to see only part of it).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat /etc/os-release 
&lt;span class="nv"&gt;NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Scientific Linux&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7.6 (Nitrogen)&amp;quot;&lt;/span&gt;
...

$ cat file1 file2
contents of file1
contents of file2
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;create a new file&lt;/h3&gt;
&lt;p&gt;Input from terminal can also be redirected into a file with &lt;code&gt;cat&lt;/code&gt;. Finish input by &lt;code&gt;ctrl+d&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat &amp;gt; text
input here
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;redirect to other commands&lt;/h3&gt;
&lt;p&gt;If the contents of a file is too much to fit into the terminal and overwhelms scrolling, we can redirect the output to other commands (e.g. &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;more&lt;/code&gt;) for better viewing.&lt;/p&gt;
&lt;h4&gt;less and more&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;less&lt;/code&gt; can be used for openning a file for interactive reading, scrolling (both forward and backward), and searching.&lt;/p&gt;
&lt;h5&gt;go forward, go backward&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;space&lt;/code&gt; or &lt;code&gt;enter&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;forward search, backward search&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;/word&lt;/code&gt;, &lt;code&gt;?word&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;next match, previous match&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;n&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;display text from line 10&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;more +10 text.txt&lt;/code&gt;  &lt;/p&gt;
&lt;h5&gt;prompt you to continue reading by space&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;more -d text.txt&lt;/code&gt;  &lt;/p&gt;
&lt;h4&gt;grep&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; can be used for searching a pattern in a document and presenting the result in a customized format. Regular expression is supported.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th align="center"&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td align="center"&gt;Shows all the lines that do not match the searched string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-c&lt;/td&gt;
&lt;td align="center"&gt;Displays only the count of matching lines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-n&lt;/td&gt;
&lt;td align="center"&gt;Shows the matching line and its number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-i&lt;/td&gt;
&lt;td align="center"&gt;Match both (upper and lower) case&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-l&lt;/td&gt;
&lt;td align="center"&gt;Shows just the name of the file with the string&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;sort&lt;/h4&gt;
&lt;p&gt;As the name suggests, it sorts the contents of a file alphabetically.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th align="center"&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-r&lt;/td&gt;
&lt;td align="center"&gt;Reverses  sorting&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-n&lt;/td&gt;
&lt;td align="center"&gt;Sorts numerically&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-f&lt;/td&gt;
&lt;td align="center"&gt;Case insensitive sorting&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;useful options of cat&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat -n /etc/passwd  &lt;span class="c1"&gt;# display line numbers in file&lt;/span&gt;
$ cat -e &lt;span class="nb"&gt;test&lt;/span&gt;  &lt;span class="c1"&gt;# display $ at the end of line&lt;/span&gt;
hello everyone, how &lt;span class="k"&gt;do&lt;/span&gt; you &lt;span class="k"&gt;do&lt;/span&gt;?$
$
Hey, I am fine.$
How is  your training going on?$
$
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Use std output with redirection operators&lt;/h2&gt;
&lt;p&gt;Note the use of one and two redirection operators.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat &lt;span class="nb"&gt;test&lt;/span&gt; &amp;gt; test1  &lt;span class="c1"&gt;# contents in test will overwrite contents in test1 &lt;/span&gt;
$ cat &lt;span class="nb"&gt;test&lt;/span&gt; &amp;gt;&amp;gt; test1 &lt;span class="c1"&gt;# contents in test will be appended into test1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;examples&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat -n /etc/os-release &lt;span class="p"&gt;|&lt;/span&gt; less +10  
    &lt;span class="m"&gt;10&lt;/span&gt;  &lt;span class="nv"&gt;BUG_REPORT_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mailto:scientific-linux-devel@listserv.fnal.gov&amp;quot;&lt;/span&gt;
    &lt;span class="m"&gt;11&lt;/span&gt;  
    &lt;span class="m"&gt;12&lt;/span&gt;  &lt;span class="nv"&gt;REDHAT_BUGZILLA_PRODUCT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Scientific Linux 7&amp;quot;&lt;/span&gt;
    &lt;span class="m"&gt;13&lt;/span&gt;  &lt;span class="nv"&gt;REDHAT_BUGZILLA_PRODUCT_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;.6
    &lt;span class="m"&gt;14&lt;/span&gt;  &lt;span class="nv"&gt;REDHAT_SUPPORT_PRODUCT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Scientific Linux&amp;quot;&lt;/span&gt;
    &lt;span class="m"&gt;15&lt;/span&gt;  &lt;span class="nv"&gt;REDHAT_SUPPORT_PRODUCT_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;7.6&amp;quot;&lt;/span&gt;
$ cat &amp;gt; text
dbac  
cba
ba
a&lt;span class="o"&gt;(&lt;/span&gt;ctrl+d to end input&lt;span class="o"&gt;)&lt;/span&gt;
$ cat text &lt;span class="p"&gt;|&lt;/span&gt; grep a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;db&lt;span style="color:red"&gt;a&lt;/span&gt;c&lt;br&gt;
cb&lt;span style="color:red"&gt;a&lt;/span&gt;&lt;br&gt;
b&lt;span style="color:red"&gt;a&lt;/span&gt;&lt;br&gt;
&lt;span style="color:red"&gt;a&lt;/span&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cat text &lt;span class="p"&gt;|&lt;/span&gt; sort &lt;span class="p"&gt;|&lt;/span&gt; grep a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span style="color:red"&gt;a&lt;/span&gt;&lt;br&gt;
b&lt;span style="color:red"&gt;a&lt;/span&gt;&lt;br&gt;
cb&lt;span style="color:red"&gt;a&lt;/span&gt;&lt;br&gt;
db&lt;span style="color:red"&gt;a&lt;/span&gt;c  &lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;cat&lt;/code&gt; is powerful especially when combined with other commands as well as pipe.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.guru99.com/linux-pipe-grep.html"&gt;&lt;em&gt;Pipe, Grep and Sort Command in Linux/Unix with Examples&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.ostechnix.com/the-difference-between-more-less-and-most-commands/"&gt;&lt;em&gt;The Difference Between more, less And most Commands&lt;/em&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.tecmint.com/13-basic-cat-command-examples-in-linux/"&gt;&lt;em&gt;13 Basic Cat Command Examples in Linux&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="notes"></category><category term="Linux"></category></entry></feed>